x
### ランダムウォークの準備
N = 100000
e = matrix(runif(2 * N, min = -0.5, max = 0.5), 2, N)
u = runif(N) # 後で使う
### ランダム
### ランダムウォークの実行
xx = matrix(0, 2, N) # 保存場所
x = c(0, 0) # 初期値
for (t in 1:N) {}
for (t in 1:N) {
x = x + e[, t] # 移動
xx[, t] = x # 記録
}
### 密度関数の準備
mu = c(0, 10) # 平均
sigma = c(1, 2) # 標準偏差
rho = 0.8 # 相関係数
Sigma = matrix( # 分散共分散行列
c(sigma[1]^2, sigma[1] * sigma[2] * rho,
sigma[2] * sigma[1] * rho, sigma[2]^2), 2, 2
)
Sigma
Sinv = solve(Sigma)
myf = function(x) exp(-0.5 * (x - mu) %*% Sinv %*% (x - mu))
### ランダムウォークの実行(密度関数を指定)
N = 100000
xx = matrix(0, 2, N) # xの保存場所
ff = rep(0, N)
cnt = 0
x = c(0, 0)
for (t in 1:N) {
}
e = matrix(runif(2 * N, min = -0.5, max = 0.5), 2, N)
for (t in 1:N) {
v = x + e[, t] # 移動の提案
a = myf(v)/ myf(x)
u = runif(1)
if (u <= a) {
x = v # 移動
cnt += 1 # 移動回数
for (t in 1:N) {
+     v = x + e[, t] # 移動の提案
+     a = myf(v)/ myf(x)
+     u = runif(1)
+     if (u <= a) {
+         x = v # 移動
cnt = cnt + 1
}
xx[, t] = x # 記録
ff[t] = myf(x) # これも記録
}
for (t in 1:N) {
v = x + e[, t] # 移動の提案
a = myf(v) / myf(x)
u = runif(1)
if (u <= a) {
x = v # 移動
cnt = cnt + 1
}
xx[, t] = x # 記録
ff[t] = myf(x) # これも記録
}
cnt / N
apply(xx, 1, mean) # 平均の確認
var(t(xx)) # 分散共分散行列
plot(xx[, 1:N])
plot(xx)
plot(xx[1, 1: N], xx[2, 1:N])
plot(xx[1, 1: 1000], xx[2, 1:1000])
plot(xx[1, 1: N], xx[2, 1:N])
